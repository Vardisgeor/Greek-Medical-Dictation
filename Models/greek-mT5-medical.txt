Greek mT5 Text Correction Model
===============================

Model Details
-------------
- Model type: Transformer-based encoder-decoder (mT5-base)
- Language: Greek (el)
- Task: Grammatical and orthographic text correction

Model Description
-----------------
This model is a fine-tuned version of the multilingual T5 (mT5) model, specifically adapted for correcting noisy Greek text generated by ASR systems. The task is framed as a supervised sequence-to-sequence problem: the model takes a corrupted sentence as input and produces the corrected sentence as output.

Input sentences are formatted as:
correct: <corrupted sentence>

Example:

Input: correct:Ποσο θα διαρκέσει η αποκατάσταση μιτα από το χιρουργειο.
Model Output: Πόσο θα διαρκέσει η αποκατάσταση μετά από το χειρουργείο?

The model captures long-range dependencies, allowing it to correct misspellings, punctuation errors, grammatical mistakes, and occasional missing or repeated words.

Training Data
-------------
- Synthetic error-augmented dataset: 56,000 corrupted–clean sentence pairs
- Data sources: Medical corpus and Wikipedia
- Error types introduced: vowel swaps, duplicated letters, punctuation mistakes, grammatical issues
- Input-output format: sequence-to-sequence (corrupted → correct)

Example corrupted–clean pairs:

Corrupted: Ιδανηκο για προληψοη αλλαα και θεραπεια των κατακλισεων.
Clean: Ιδανικό για πρόληψη αλλα και θεραπεία των κατακλίσεων.

Corrupted: H πιεση του αερα ρυθμιζετα ανυλιογα με το βαρος του ασθενη.
Clean: H πίεση του αέρα ρυθμίζεται ανάλογα με το βάρος του ασθενή.

How to Use
----------
from transformers import AutoTokenizer, AutoModelForSeq2SeqLM

# Load model and tokenizer
tokenizer = AutoTokenizer.from_pretrained("Vardis/greek-mt5-medical")
model = AutoModelForSeq2SeqLM.from_pretrained("Vardis/greek-mt5-medical")

# Example inference
input_text = "correct:Ποσο θα διαρκέσει η αποκατάσταση μιτα από το χιρουργειο."
inputs = tokenizer(input_text, return_tensors="pt")
outputs = model.generate(**inputs)
corrected_text = tokenizer.decode(outputs[0], skip_special_tokens=True)

print(corrected_text)
